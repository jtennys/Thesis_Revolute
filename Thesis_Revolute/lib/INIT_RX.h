//*****************************************************************************
//*****************************************************************************
//  FILENAME: INIT_RX.h
//   Version: 3.3, Updated on 2009/7/10 at 10:46:15
//  Generated by PSoC Designer 5.0.985.0
//
//  DESCRIPTION:  RX8 User Module C Language interface file for the
//                22/24/25/26/27xxx PSoC family of devices.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress MicroSystems 2000-2003. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************


// include the global header file
#include <m8c.h>

#define INIT_RX_RXBUF_ENABLE 1

//-------------------------------------------------
// Prototypes of the INIT_RX API.
//-------------------------------------------------

#if ( INIT_RX_RXBUF_ENABLE )
extern char INIT_RX_aRxBuffer[];
extern BYTE INIT_RX_bRxCnt;
extern BYTE INIT_RX_fStatus;
#endif

// Create pragmas to support proper argument and return value passing
#pragma fastcall16  INIT_RX_EnableInt
#pragma fastcall16  INIT_RX_DisableInt
#pragma fastcall16  INIT_RX_Start
#pragma fastcall16  INIT_RX_Stop
#pragma fastcall16  INIT_RX_bReadRxData
#pragma fastcall16  INIT_RX_bReadRxStatus

#pragma fastcall16  INIT_RX_cGetChar
#pragma fastcall16  INIT_RX_cReadChar
#pragma fastcall16  INIT_RX_iReadChar

#if ( INIT_RX_RXBUF_ENABLE )
#pragma fastcall16  INIT_RX_CmdReset
#pragma fastcall16  INIT_RX_bCmdCheck
#pragma fastcall16  INIT_RX_bErrCheck
#pragma fastcall16  INIT_RX_bCmdLength
#pragma fastcall16  INIT_RX_szGetParam
#pragma fastcall16  INIT_RX_szGetRestOfParams
#endif

//-------------------------------------------------
// Prototypes of the INIT_RX API.
//-------------------------------------------------
extern void  INIT_RX_EnableInt(void);
extern void  INIT_RX_DisableInt(void);
extern void  INIT_RX_Start(BYTE bParity);
extern void  INIT_RX_Stop(void);
extern BYTE  INIT_RX_bReadRxData(void);
extern BYTE  INIT_RX_bReadRxStatus(void);

// High level RX functions
extern CHAR         INIT_RX_cGetChar(void);
extern CHAR         INIT_RX_cReadChar(void);
extern INT          INIT_RX_iReadChar(void);

#if ( INIT_RX_RXBUF_ENABLE )
extern void   INIT_RX_CmdReset(void);
extern BYTE   INIT_RX_bCmdCheck(void);
extern BYTE   INIT_RX_bErrCheck(void);
extern BYTE   INIT_RX_bCmdLength(void);
extern char * INIT_RX_szGetParam(void);
extern char * INIT_RX_szGetRestOfParams(void);
#endif

// Old function call names, do not use.
// These names will be removed in a future release.
#pragma fastcall16 bINIT_RX_ReadRxData
#pragma fastcall16 bINIT_RX_ReadRxStatus
extern BYTE bINIT_RX_ReadRxData(void);
extern BYTE bINIT_RX_ReadRxStatus(void);

//-------------------------------------------------
// Constants for INIT_RX API's.
//-------------------------------------------------

//------------------------------------
// Receiver Interrupt masks
//------------------------------------
#define INIT_RX_INT_REG_ADDR                   ( 0x0e1 )
#define INIT_RX_bINT_MASK                      ( 0x04 )

//------------------------------------
// Receiver Parity masks
//------------------------------------
#define  INIT_RX_PARITY_NONE         0x00
#define  INIT_RX_PARITY_EVEN         0x02
#define  INIT_RX_PARITY_ODD          0x06

//------------------------------------
//  Receiver Status Register masks
//------------------------------------
#define  INIT_RX_RX_ACTIVE           0x10
#define  INIT_RX_RX_COMPLETE         0x08
#define  INIT_RX_RX_PARITY_ERROR     0x80
#define  INIT_RX_RX_OVERRUN_ERROR    0x40
#define  INIT_RX_RX_FRAMING_ERROR    0x20
#define  INIT_RX_RX_NO_ERROR         0xE0

#define  INIT_RX_RX_NO_DATA         0x01

#define  INIT_RX_RX_BUF_ERROR             0xF0  // Mask for any Rx that may occur.
#define  INIT_RX_RX_BUF_OVERRUN           0x10  // This indicates the software buffer has
                                                           // been over run.
#define  INIT_RX_RX_BUF_CMDTERM           0x01  // Command terminator has been received.

// Old defines, will be removed in future release
#define  RX8_PARITY_NONE         0x00
#define  RX8_PARITY_EVEN         0x02
#define  RX8_PARITY_ODD          0x06
#define  RX8_RX_ACTIVE           0x10
#define  RX8_RX_COMPLETE         0x08
#define  RX8_RX_PARITY_ERROR     0x80
#define  RX8_RX_OVERRUN_ERROR    0x40
#define  RX8_RX_FRAMING_ERROR    0x20
#define  RX8_RX_NO_ERROR         0xE0

//-------------------------------------------------
// Register Addresses for INIT_RX
//-------------------------------------------------
#pragma ioport  INIT_RX_CONTROL_REG:    0x02b              // Control register
BYTE            INIT_RX_CONTROL_REG;
#pragma ioport  INIT_RX_RX_SHIFT_REG:   0x028              // RX Shift Register register
BYTE            INIT_RX_RX_SHIFT_REG;
#pragma ioport  INIT_RX_RX_BUFFER_REG:  0x02a              // RX Buffer Register
BYTE            INIT_RX_RX_BUFFER_REG;
#pragma ioport  INIT_RX_FUNC_REG:   0x128                  // Function register
BYTE            INIT_RX_FUNC_REG;
#pragma ioport  INIT_RX_INPUT_REG:  0x129                  // Input register
BYTE            INIT_RX_INPUT_REG;
#pragma ioport  INIT_RX_OUTPUT_REG: 0x12a                  // Output register
BYTE            INIT_RX_OUTPUT_REG;

// end of file INIT_RX.h

