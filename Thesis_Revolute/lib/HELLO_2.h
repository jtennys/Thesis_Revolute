//*****************************************************************************
//*****************************************************************************
//  FILENAME: HELLO_2.h
//   Version: 3.3, Updated on 2009/7/10 at 10:46:15
//  Generated by PSoC Designer 5.0.985.0
//
//  DESCRIPTION:  RX8 User Module C Language interface file for the
//                22/24/25/26/27xxx PSoC family of devices.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress MicroSystems 2000-2003. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************


// include the global header file
#include <m8c.h>

#define HELLO_2_RXBUF_ENABLE 1

//-------------------------------------------------
// Prototypes of the HELLO_2 API.
//-------------------------------------------------

#if ( HELLO_2_RXBUF_ENABLE )
extern char HELLO_2_aRxBuffer[];
extern BYTE HELLO_2_bRxCnt;
extern BYTE HELLO_2_fStatus;
#endif

// Create pragmas to support proper argument and return value passing
#pragma fastcall16  HELLO_2_EnableInt
#pragma fastcall16  HELLO_2_DisableInt
#pragma fastcall16  HELLO_2_Start
#pragma fastcall16  HELLO_2_Stop
#pragma fastcall16  HELLO_2_bReadRxData
#pragma fastcall16  HELLO_2_bReadRxStatus

#pragma fastcall16  HELLO_2_cGetChar
#pragma fastcall16  HELLO_2_cReadChar
#pragma fastcall16  HELLO_2_iReadChar

#if ( HELLO_2_RXBUF_ENABLE )
#pragma fastcall16  HELLO_2_CmdReset
#pragma fastcall16  HELLO_2_bCmdCheck
#pragma fastcall16  HELLO_2_bErrCheck
#pragma fastcall16  HELLO_2_bCmdLength
#pragma fastcall16  HELLO_2_szGetParam
#pragma fastcall16  HELLO_2_szGetRestOfParams
#endif

//-------------------------------------------------
// Prototypes of the HELLO_2 API.
//-------------------------------------------------
extern void  HELLO_2_EnableInt(void);
extern void  HELLO_2_DisableInt(void);
extern void  HELLO_2_Start(BYTE bParity);
extern void  HELLO_2_Stop(void);
extern BYTE  HELLO_2_bReadRxData(void);
extern BYTE  HELLO_2_bReadRxStatus(void);

// High level RX functions
extern CHAR         HELLO_2_cGetChar(void);
extern CHAR         HELLO_2_cReadChar(void);
extern INT          HELLO_2_iReadChar(void);

#if ( HELLO_2_RXBUF_ENABLE )
extern void   HELLO_2_CmdReset(void);
extern BYTE   HELLO_2_bCmdCheck(void);
extern BYTE   HELLO_2_bErrCheck(void);
extern BYTE   HELLO_2_bCmdLength(void);
extern char * HELLO_2_szGetParam(void);
extern char * HELLO_2_szGetRestOfParams(void);
#endif

// Old function call names, do not use.
// These names will be removed in a future release.
#pragma fastcall16 bHELLO_2_ReadRxData
#pragma fastcall16 bHELLO_2_ReadRxStatus
extern BYTE bHELLO_2_ReadRxData(void);
extern BYTE bHELLO_2_ReadRxStatus(void);

//-------------------------------------------------
// Constants for HELLO_2 API's.
//-------------------------------------------------

//------------------------------------
// Receiver Interrupt masks
//------------------------------------
#define HELLO_2_INT_REG_ADDR                   ( 0x0e1 )
#define HELLO_2_bINT_MASK                      ( 0x08 )

//------------------------------------
// Receiver Parity masks
//------------------------------------
#define  HELLO_2_PARITY_NONE         0x00
#define  HELLO_2_PARITY_EVEN         0x02
#define  HELLO_2_PARITY_ODD          0x06

//------------------------------------
//  Receiver Status Register masks
//------------------------------------
#define  HELLO_2_RX_ACTIVE           0x10
#define  HELLO_2_RX_COMPLETE         0x08
#define  HELLO_2_RX_PARITY_ERROR     0x80
#define  HELLO_2_RX_OVERRUN_ERROR    0x40
#define  HELLO_2_RX_FRAMING_ERROR    0x20
#define  HELLO_2_RX_NO_ERROR         0xE0

#define  HELLO_2_RX_NO_DATA         0x01

#define  HELLO_2_RX_BUF_ERROR             0xF0  // Mask for any Rx that may occur.
#define  HELLO_2_RX_BUF_OVERRUN           0x10  // This indicates the software buffer has
                                                           // been over run.
#define  HELLO_2_RX_BUF_CMDTERM           0x01  // Command terminator has been received.

// Old defines, will be removed in future release
#define  RX8_PARITY_NONE         0x00
#define  RX8_PARITY_EVEN         0x02
#define  RX8_PARITY_ODD          0x06
#define  RX8_RX_ACTIVE           0x10
#define  RX8_RX_COMPLETE         0x08
#define  RX8_RX_PARITY_ERROR     0x80
#define  RX8_RX_OVERRUN_ERROR    0x40
#define  RX8_RX_FRAMING_ERROR    0x20
#define  RX8_RX_NO_ERROR         0xE0

//-------------------------------------------------
// Register Addresses for HELLO_2
//-------------------------------------------------
#pragma ioport  HELLO_2_CONTROL_REG:    0x02f              // Control register
BYTE            HELLO_2_CONTROL_REG;
#pragma ioport  HELLO_2_RX_SHIFT_REG:   0x02c              // RX Shift Register register
BYTE            HELLO_2_RX_SHIFT_REG;
#pragma ioport  HELLO_2_RX_BUFFER_REG:  0x02e              // RX Buffer Register
BYTE            HELLO_2_RX_BUFFER_REG;
#pragma ioport  HELLO_2_FUNC_REG:   0x12c                  // Function register
BYTE            HELLO_2_FUNC_REG;
#pragma ioport  HELLO_2_INPUT_REG:  0x12d                  // Input register
BYTE            HELLO_2_INPUT_REG;
#pragma ioport  HELLO_2_OUTPUT_REG: 0x12e                  // Output register
BYTE            HELLO_2_OUTPUT_REG;

// end of file HELLO_2.h

